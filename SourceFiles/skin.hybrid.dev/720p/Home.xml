<?xml version="1.0" encoding="utf-8"?>
<window>
	<defaultcontrol always="true">9000</defaultcontrol>
	<allowoverlay>no</allowoverlay>
	<include condition="!Skin.HasSetting(initialsetuprun)">DefaultInitialSetup</include>
	<onload condition="!IsEmpty(Window(home).Property(MenuItemSelected))">ClearProperty(MenuItemSelected,Home)</onload>
	<onload condition="!IsEmpty(Window(home).Property(MenuItemActive))">ClearProperty(MenuItemActive,Home)</onload>
	<onload condition="!IsEmpty(Window(home).Property(SubMenuBackground))">ClearProperty(SubMenuBackground,Home)</onload>
	<onload condition="!IsEmpty(Window(home).Property(MenuItemAddon))">ClearProperty(MenuItemAddon,Home)</onload>
	<onload condition="!IsEmpty(Window(home).Property(MenuItemSub))">ClearProperty(MenuItemSub,Home)</onload>
	<onload condition="!IsEmpty(Window(home).Property(MenuBackground))">ClearProperty(MenuBackground,Home)</onload>
	<onload condition="Skin.HasSetting(holidayeffects) + System.Date(1-6,11-23)">Skin.Reset(holidayeffects)</onload>
	<onload condition="!Skin.HasSetting(disableslideshowart) + IsEmpty(Window.Property(ArtistSlideshowRunning))">RunScript(script.artistslideshow, daemon=True)</onload>
	<onload condition="System.HasAddon(script.favourites)">XBMC.RunScript(script.favourites)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + Library.HasContent(Movies)">XBMC.RunScript(script.randomandlastitems,type=Movie,limit=12,method=Random,playlist=special://skin/extras/Playlists/UnwatchedMovies.xsp,menu=UnWatched)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.1.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.1.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistOne)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.2.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.2.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistTwo)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.3.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.3.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistThree)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.4.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.4.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistFour)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.5.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.5.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistFive)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.6.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.6.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistSix)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.7.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.7.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistSeven)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.8.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.8.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistEight)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.9.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.9.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistNine)</onload>
	<onload condition="!Skin.HasSetting(disablescriptplaylist) + !IsEmpty(Skin.String(homeitem.10.playlist))">XBMC.RunScript(script.randomandlastitems,playlist=$INFO[Skin.String(homeitem.10.playlist)],method=$VAR[PlaylistSortOrder],limit=12,unwatched=False,resume=False,property=HomeplaylistTen)</onload>
	<onload condition="!IsEmpty(Weather.Plugin) + !Weather.IsFetched">Weather.Refresh</onload>
	<onload condition="Window.Previous(startup)">Control.Move(9000,$INFO[Skin.String(initialmenuitem)])</onload>
	<controls>
		<include>CommonBackground</include>
		<include condition="!Skin.HasSetting(hideraindropeffect) | Skin.HasSetting(holidayeffects)">AnimatedBackgroundEffect</include>
		<control type="image">
			<left>0</left>
			<top>142r</top>
			<width>1280</width>
			<height>142</height>
			<texture>floor.png</texture>
			<animation effect="fade" time="250" condition="Window.Previous(Home)">WindowOpen</animation>
			<animation effect="fade" time="250" condition="Window.Next(Home)">WindowClose</animation>
		</control>
		<include>HomeAddonSystem</include>
		<control type="group" id="601">
			<left>31</left>
			<top>118</top>
			<animation effect="zoom" start="0" end="100" center="auto" time="300" delay="1000" easing="out" tween="sine">WindowOpen</animation>
			<animation effect="zoom" start="0" end="100" center="auto" time="300" delay="1000" easing="out" tween="sine">Visible</animation>
			<animation effect="zoom" start="100" end="0" center="auto" time="200" easing="in" tween="sine">Hidden</animation>
			<animation effect="zoom" start="100" end="0" center="auto" time="200" easing="out" tween="sine" condition="Skin.HasSetting(enablecleanhome) + ![Control.HasFocus(9004) | Player.HasMedia | Control.HasFocus(510)]">Conditional</animation>
			<visible>!StringCompare(Container(9000).ListItem.Property(WidgetSet),Favourites)</visible>
			<visible>!Skin.HasSetting(hideextendedwidget) | Player.HasMedia</visible>
			<visible>
				Player.HasMedia + !Skin.HasSetting(hidehomenowplaying) | Control.HasFocus(510) |
				![Skin.HasSetting(hidesuggestedinfo) | Player.HasMedia] + !IsEmpty(Window(home).Property(RecommendedMovie.1.Title)) + StringCompare(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies) + !Skin.HasSetting(disablescriptplaylist) |
				![Skin.HasSetting(hidesuggestedinfo) | Player.HasMedia] + !IsEmpty(Window(home).Property(RecommendedMovie.1.Title)) + [StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies)] |
				![Skin.HasSetting(hidesuggestedinfo) | Player.HasMedia] + !IsEmpty(Window(home).Property(RecommendedEpisode.1.Title)) + [StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes)] |
				![Skin.HasSetting(hidesuggestedinfo) | Player.HasMedia] + !IsEmpty(Window(home).Property(RecommendedMusicVideo.1.Title)) + [StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)] |
				![Skin.HasSetting(hidesuggestedinfo) | Player.HasMedia] + !IsEmpty(Window(home).Property(RecommendedAlbum.1.Title)) + [StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentSongs) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomSongs) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedAlbums)] |
				![Skin.HasSetting(hidesuggestedinfo) | Player.HasMedia] + StringCompare(Container(9000).ListItem.Property(WidgetSet),Weather)
			</visible>
			<control type="image">
				<left>471</left>
				<top>152</top>
				<width>550</width>
				<height>24</height>
				<align>left</align>
				<texture>InfoWidget/HorzWhiteBar.png</texture>
				<colordiffuse>C6FFFAF0</colordiffuse>
			</control>
			<control type="label">
				<left>510</left>
				<top>145</top>
				<width>459</width>
				<include>HomeFlagLabel</include>
				<label>$VAR[MediaPlayerDuration]</label>
				<animation effect="fade" start="100" end="0" time="750" condition="Player.HasMedia + System.IdleTime(8)">Conditional</animation>
				<visible>Player.HasMedia + !Control.HasFocus(510)</visible>
			</control>
			<control type="image">
				<left>-22</left>
				<top>90</top>
				<width>1260</width>
				<height>284</height>
				<texture>InfoWidget/HomeWidgetInfo.png</texture>
				<colordiffuse>FFFFFAF0</colordiffuse>
				<include condition="!Skin.HasSetting(disablewidgetadjust)">WidgetTransparency</include>
			</control>
			<control type="image">
				<left>-9</left>
				<top>101</top>
				<width>475</width>
				<height>262</height>
				<texture>InfoWidget/fanartframe.png</texture>
			</control>
			<control type="multiimage">
				<left>6</left>
				<top>116</top>
				<width>444</width>
				<height>230</height>
				<timeperimage>8000</timeperimage>
				<randomize>true</randomize>
				<fadetime>1000</fadetime>
				<aspectratio>stretch</aspectratio>
				<imagepath fallback="InfoWidget/hive_back.png" background="true">$VAR[InfoWidgetFanArt]</imagepath>
			</control>
			<control type="multiimage">
				<left>6</left>
				<top>116</top>
				<width>444</width>
				<height>230</height>
				<timeperimage>8000</timeperimage>
				<randomize>true</randomize>
				<fadetime>1000</fadetime>
				<aspectratio>keep</aspectratio>
				<imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
				<visible>Player.HasAudio + !Player.IsInternetStream + !Control.HasFocus(510)</visible>
			</control>
			<control type="image">
				<left>12</left>
				<top>120</top>
				<width>110</width>
				<height>60</height>
				<aspectratio align="left" aligny="top">keep</aspectratio>
				<texture background="true">$INFO[Skin.String(PhysicalMusicFolder)]$INFO[MusicPlayer.Artist,,/logo.png]</texture>
				<fadetime>FanartCrossFadeTime</fadetime>
				<visible>Player.HasAudio + !Player.IsInternetStream + !Control.HasFocus(510)</visible>
			</control>
			<control type="videowindow" id="8">
				<left>6</left>
				<top>116</top>
				<width>444</width>
				<height>230</height>
				<aspectratio>stretch</aspectratio>
				<animation effect="slide" start="0,0" end="-2000,0" time="0">WindowClose</animation>
				<visible>!Control.HasFocus(510)</visible>
			</control>
			<control type="image">
				<left>1042</left>
				<top>115</top>
				<width>165</width>
				<height>234</height>
				<aspectratio align="left" aligny="center">keep</aspectratio>
				<texture fallback="DefaultVideoPoster.png" background="true">$VAR[InfoWidgetPoster]</texture>
				<bordertexture border="-29">InfoWidget/posterframe.png</bordertexture>
				<fadetime>FanartCrossFadeTime</fadetime>
			</control>
			<control type="button" id="9004">
				<left>6</left>
				<top>115</top>
				<width>444</width>
				<height>234</height>
				<aligny>center</aligny>
				<onclick condition="Player.HasMedia">PlayerControl(Play)</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentMovies) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedMovie.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomMovies) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedMovie.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedMovie.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies) + !Skin.HasSetting(disablescriptplaylist) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedMovie.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedEpisode.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedEpisode.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedEpisode.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentConcerts) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedMusicVideo.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomConcerts) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedMusicVideo.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedMusicVideo.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentSongs) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedAlbum.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomSongs) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedAlbum.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentAlbums) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedAlbum.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomAlbums) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedAlbum.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedAlbums) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedAlbum.1.Play)]</onclick>
				<onclick condition="StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomArtists) + !Player.HasMedia">$INFO[Window(home).Property(RecommendedAlbum.1.Play)]</onclick>
				<onup>510</onup>
				<ondown condition="!Player.HasMedia | !Skin.HasSetting(hidefullscreenitem)">9000</ondown>
				<ondown condition="Player.HasMedia + Skin.HasSetting(hidefullscreenitem)">607</ondown>
				<onleft>9000</onleft>
				<onright condition="!Player.HasMedia | !Skin.HasSetting(hidefullscreenitem)">510</onright>
				<onright condition="Player.HasMedia + Skin.HasSetting(hidefullscreenitem)">610</onright>
				<onleft>9000</onleft>
				<texturefocus>-</texturefocus>
				<texturenofocus>-</texturenofocus>
				<aspectratio>stretch</aspectratio>
				<colordiffuse>C3FFFFFF</colordiffuse>
				<visible>
				Player.HasMedia |
				[!IsEmpty(Window.Property(RecommendedMovie.1.Title)) + [StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies)]]|
				[!IsEmpty(Window.Property(RecommendedEpisode.1.Title)) + [StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes)]]|
				[!IsEmpty(Window.Property(RecommendedMusicVideo.1.Title)) + [StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)]]|
				[!IsEmpty(Window.Property(RecommendedAlbum.1.Title)) + [StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentSongs) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomSongs) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomArtists)]]
			</visible>
			</control>
			<control type="image">
				<left>6</left>
				<top>115</top>
				<width>444</width>
				<height>234</height>
				<align>center</align>
				<aspectratio>stretch</aspectratio>
				<texture>InfoWidget/black.png</texture>
				<colordiffuse>C3FFFFFF</colordiffuse>
				<animation effect="fade" time="300">Hidden</animation>
				<visible>Control.HasFocus(9004)</visible>
			</control>
			<control type="image">
				<left>180</left>
				<top>160</top>
				<width>100</width>
				<height>100</height>
				<align>center</align>
				<aspectratio>stretch</aspectratio>
				<texture>$VAR[MediaPlayButton]</texture>
				<include>Animation_Fade</include>
				<visible>Control.HasFocus(9004)</visible>
			</control>
			<control type="label">
				<left>20</left>
				<top>265</top>
				<width>418</width>
				<height>30</height>
				<align>center</align>
				<font>font13</font>
				<textcolor>FFFFFAF0</textcolor>
				<label>$VAR[ResumeMediaTitle]</label>
				<scroll>true</scroll>
				<scrollout>false</scrollout>
				<visible>Control.HasFocus(9004)</visible>
			</control>
			<control type="label">
				<left>471</left>
				<top>110</top>
				<width>549</width>
				<height>30</height>
				<align>left</align>
				<font>font13_title</font>
				<textcolor>selected</textcolor>
				<label>$VAR[SuggestedMediaTitle]</label>
				<scroll>true</scroll>
				<scrollout>false</scrollout>
			</control>
			<control type="label">
				<left>471</left>
				<top>133</top>
				<width>549</width>
				<height>20</height>
				<align>left</align>
				<font>font10</font>
				<textcolor>grey</textcolor>
				<label>$VAR[InfoWidgetTagLine]</label>
				<scroll>true</scroll>
				<scrollout>false</scrollout>
			</control>
			<control type="grouplist">
				<left>480</left>
				<top>144</top>
				<orientation>horizontal</orientation>
				<itemgap>3</itemgap>
				<visible>Control.HasFocus(510)</visible>
				<control type="image">
					<width>50</width>
					<height>40</height>
					<align>center</align>
					<aligny>center</aligny>
					<aspectratio>keep</aspectratio>
					<texture fallback="flags/rating/MPAA_NR_Certificate_US.png">$VAR[InfoWidgetMPAA]</texture>
					<colordiffuse>E4101010</colordiffuse>
					<fadetime>FanartCrossFadeTime</fadetime>
					<visible>
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies) | 
						[StringCompare(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies) + !Skin.HasSetting(disablescriptplaylist)] |
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes) | 
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)
					</visible>
				</control>
				<control type="label">
					<include>HomeFlagSeparator</include>
					<visible>
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies) | 
						[StringCompare(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies) + !Skin.HasSetting(disablescriptplaylist)] |
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes) | 
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)
					</visible>
				</control>
				<control type="image">
					<width>80</width>
					<height>40</height>
					<align>center</align>
					<aligny>center</aligny>
					<aspectratio>keep</aspectratio>
					<texture fallback="rating0.png">$VAR[InfoWidgetVideoStar]</texture>
					<colordiffuse>FFFFFAF0</colordiffuse>
					<fadetime>FanartCrossFadeTime</fadetime>
					<visible>
						StringCompare(Container(9000).ListItem.Property(WidgetSet),VideoPlayList) | 
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies) | 
						[StringCompare(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies) + !Skin.HasSetting(disablescriptplaylist)] |
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes) | 
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)
					</visible>
				</control>
				<control type="image">
					<width>80</width>
					<height>40</height>
					<align>center</align>
					<aligny>center</aligny>
					<aspectratio>keep</aspectratio>
					<texture fallback="rating0.png">$VAR[InfoWidgetMusicStar]</texture>
					<colordiffuse>FFFFFAF0</colordiffuse>
					<fadetime>FanartCrossFadeTime</fadetime>
					<visible>
						StringCompare(Container(9000).ListItem.Property(WidgetSet),MusicPlayList) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentSongs) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomSongs) |
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedAlbums)
					</visible>
				</control>
				<control type="label">
					<width>40</width>
					<include>HomeFlagLabel</include>
					<label>$VAR[InfoWidgetRating]</label>
					<scroll>true</scroll>
					<visible>!IsEmpty(Container(510).ListItem.Property(Rating))</visible>
				</control>
				<control type="label">
					<include>HomeFlagSeparator</include>
					<visible>
						StringCompare(Container(9000).ListItem.Property(WidgetSet),VideoPlayList) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomArtists) | 
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies) | 
						[StringCompare(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies) + !Skin.HasSetting(disablescriptplaylist)] |
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes) | 
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts) |
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentSongs) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomSongs) |
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomAlbums) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedAlbums)
					</visible>
				</control>
				<control type="label">
					<width>100</width>
					<include>HomeFlagLabel</include>
					<label>$VAR[InfoWidgetYear]</label>
					<scroll>true</scroll>
					<visible>!IsEmpty(Container(510).ListItem.Property(Year))</visible>
				</control>
				<control type="label">
					<include>HomeFlagSeparator</include>
					<visible>!IsEmpty(Container(510).ListItem.Property(Year))</visible>
				</control>
				<control type="label">
					<width>200</width>
					<include>HomeFlagLabel</include>
					<label>$INFO[Container(510).ListItem.Property(Studio)]</label>
					<scroll>true</scroll>
					<visible>!IsEmpty(Container(510).ListItem.Property(Studio))</visible>
				</control>
				<control type="label">
					<width>120</width>
					<include>HomeFlagLabel</include>
					<label>$VAR[InfoPanelRuntime]</label>
					<scroll>true</scroll>
					<visible>
						StringCompare(Container(9000).ListItem.Property(WidgetSet),VideoPlayList) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomMovies) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedMovies) | 
						[StringCompare(Container(9000).ListItem.Property(WidgetSet),UnWatchedMovies) + !Skin.HasSetting(disablescriptplaylist)] |
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomEpisodes) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedEpisodes) | 
						StringCompare(Container(9000).ListItem.Property(WidgetSet),RecentConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),RandomConcerts) | StringCompare(Container(9000).ListItem.Property(WidgetSet),SuggestedConcerts)
					</visible>
				</control>
			</control>
			<control type="label">
				<left>480</left>
				<top>144</top>
				<width>440</width>
				<height>41</height>
				<align>left</align>
				<aligny>center</aligny>
				<font>font10</font>
				<textcolor>FF101010</textcolor>
				<label>$VAR[InfoWidgetRunTime]</label>
				<scroll>true</scroll>
				<scrollout>false</scrollout>
			</control>
			<control type="label">
				<left>471</left>
				<top>185</top>
				<width>549</width>
				<height>20</height>
				<align>left</align>
				<textcolor>grey</textcolor>
				<font>font10</font>
				<label>$VAR[InfoWidgetGenre]</label>
				<scroll>true</scroll>
				<scrollout>false</scrollout>
			</control>
			<control type="image">
				<left>471</left>
				<top>209</top>
				<width>549</width>
				<height>2</height>
				<align>left</align>
				<texture flipx="true">divider.png</texture>
				<visible>!Player.HasMedia | Control.HasFocus(510)</visible>
			</control>
			<control type="progress">
				<left>472</left>
				<top>209</top>
				<width>547</width>
				<height>3</height>
				<aspectratio>stretch</aspectratio>
				<info>Player.Progress</info>
				<include>Animation_Fade</include>
				<visible>Player.HasMedia + !Control.HasFocus(510)</visible>
			</control>
			<control type="textbox">
				<left>471</left>
				<top>220</top>
				<width>549</width>
				<height>124</height>
				<align>justify</align>
				<label>$VAR[InfoWidgetPlot]</label>
				<textcolor>white</textcolor>
				<font>font12</font>
				<autoscroll delay="20000" time="3000" repeat="20000">!Skin.HasSetting(disableautoscroll)</autoscroll>
			</control>
			<control type="group" id="600">
				<left>6</left>
				<top>304</top>
				<ondown>9000</ondown>
				<onup>9004</onup>
				<defaultcontrol>607</defaultcontrol>
				<include>VisibleFadeEffect</include>
				<include>Window_OpenClose_Animation</include>
				<visible>Player.HasMedia + Skin.HasSetting(hidefullscreenitem) + ![System.IdleTime(5) | Control.HasFocus(510)]</visible>
				<control type="image">
					<description>Background image</description>
					<left>0</left>
					<top>0</top>
					<width>444</width>
					<height>45</height>
					<texture>black-back.png</texture>
				</control>
				<control type="group">
					<visible>!VideoPlayer.Content(LiveTV)</visible>
					<control type="button" id="603">
						<left>62</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDPlaylistFO.png</texturefocus>
						<texturenofocus>OSD/OSDPlaylistNF.png</texturenofocus>
						<onleft>610</onleft>
						<onright>604</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>ActivateWindow(musicplaylist)</onclick>
						<enable>Player.HasAudio + !IsEmpty(MusicPlayer.offset(1).Artist)</enable>
					</control>
					<control type="button" id="604">
						<left>102</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDPrevTrackFO.png</texturefocus>
						<texturenofocus>OSD/OSDPrevTrackNF.png</texturenofocus>
						<onleft>603</onleft>
						<onright>605</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(Previous)</onclick>
					</control>
					<control type="button" id="605">
						<left>142</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDRewindFO.png</texturefocus>
						<texturenofocus>OSD/OSDRewindNF.png</texturenofocus>
						<onleft>604</onleft>
						<onright>606</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(Rewind)</onclick>
					</control>
					<control type="togglebutton" id="606">
						<left>182</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDPauseFO.png</texturefocus>
						<texturenofocus>OSD/OSDPauseNF.png</texturenofocus>
						<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
						<alttexturefocus>OSD/OSDPlayFO.png</alttexturefocus>
						<alttexturenofocus>OSD/OSDPlayNF.png</alttexturenofocus>
						<onleft>605</onleft>
						<onright>607</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(Play)</onclick>
					</control>
					<control type="button" id="607">
						<left>222</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDStopFO.png</texturefocus>
						<texturenofocus>OSD/OSDStopNF.png</texturenofocus>
						<onleft>606</onleft>
						<onright>608</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>down</onclick>
						<onclick>XBMC.PlayerControl(Stop)</onclick>
					</control>
					<control type="button" id="608">
						<left>262</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDForwardFO.png</texturefocus>
						<texturenofocus>OSD/OSDForwardNF.png</texturenofocus>
						<onleft>607</onleft>
						<onright>609</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(Forward)</onclick>
					</control>
					<control type="button" id="609">
						<left>302</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDNextTrackFO.png</texturefocus>
						<texturenofocus>OSD/OSDNextTrackNF.png</texturenofocus>
						<onleft>608</onleft>
						<onright>610</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(Next)</onclick>
					</control>
					<control type="button" id="610">
						<left>342</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDFullScreenFO.png</texturefocus>
						<texturenofocus>OSD/OSDFullScreenNF.png</texturenofocus>
						<onleft>609</onleft>
						<onright>603</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>fullscreen</onclick>
					</control>
				</control>
				<control type="group">
					<visible>VideoPlayer.Content(LiveTV)</visible>
					<control type="button" id="603">
						<left>102</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDChannelUPFO.png</texturefocus>
						<texturenofocus>OSD/OSDChannelUPNF.png</texturenofocus>
						<onleft>610</onleft>
						<onright>606</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(Previous)</onclick>
					</control>
					<control type="button" id="606">
						<left>142</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDChannelDownFO.png</texturefocus>
						<texturenofocus>OSD/OSDChannelDownNF.png</texturenofocus>
						<onleft>603</onleft>
						<onright>607</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(Next)</onclick>
					</control>
					<control type="button" id="607">
						<left>182</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDStopFO.png</texturefocus>
						<texturenofocus>OSD/OSDStopNF.png</texturenofocus>
						<onleft>606</onleft>
						<onright>608</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>down</onclick>
						<onclick>XBMC.PlayerControl(Stop)</onclick>
					</control>
					<control type="togglebutton" id="608">
						<left>222</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDPauseFO.png</texturefocus>
						<texturenofocus>OSD/OSDPauseNF.png</texturenofocus>
						<usealttexture>Player.Paused | Player.Forwarding | Player.Rewinding</usealttexture>
						<alttexturefocus>OSD/OSDPlayFO.png</alttexturefocus>
						<alttexturenofocus>OSD/OSDPlayNF.png</alttexturenofocus>
						<onleft>607</onleft>
						<onright>609</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(Play)</onclick>
						<enable>Player.PauseEnabled</enable>
						<animation effect="fade" start="100" end="30" time="100" condition="!Player.PauseEnabled">Conditional</animation>
					</control>
					<control type="button" id="609">
						<left>262</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDRecordOffFO.png</texturefocus>
						<texturenofocus>OSD/OSDRecordOffNF.png</texturenofocus>
						<onleft>608</onleft>
						<onright>610</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>XBMC.PlayerControl(record)</onclick>
					</control>
					<control type="button" id="610">
						<left>302</left>
						<top>2</top>
						<width>40</width>
						<height>40</height>
						<texturefocus>OSD/OSDFullScreenFO.png</texturefocus>
						<texturenofocus>OSD/OSDFullScreenNF.png</texturenofocus>
						<onleft>609</onleft>
						<onright>603</onright>
						<ondown>9000</ondown>
						<onup>9004</onup>
						<onclick>fullscreen</onclick>
					</control>
				</control>
			</control>
		</control>
		<control type="group">
			<left>0</left>
			<top>478</top>
			<include>Window_OpenClose_Animation</include>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>1280</width>
				<height>40</height>
				<aspectratio>stretch</aspectratio>
				<texture>Home/StatusBar.png</texture>
				<colordiffuse>FFFFFAF0</colordiffuse>
				<visible>system.getbool(lookandfeel.enablerssfeeds) | !Skin.HasSetting(hidehomestats) | [MusicPlayer.HasNext + !Skin.HasSetting(hidenextsongsinfo)]</visible>
			</control>
			<control type="label">
				<left>10</left>
				<top>10</top>
				<height>30</height>
				<width>1260</width>
				<label>$VAR[InfoBarStats]</label>
				<align>right</align>
				<aligny>center</aligny>
				<font>font12</font>
				<textcolor>C0FFFFFF</textcolor>
				<shadowcolor>black</shadowcolor>
				<animation effect="slide" start="0,35" time="300" tween="quadratic" easing="out" condition="[system.getbool(lookandfeel.enablerssfeeds) + !StringCompare(Container(9000).ListItem.Property(LibStats),None) | ControlGroup(9003).HasFocus] | !MusicPlayer.HasNext">conditional</animation>
				<animation effect="slide" end="0,35" time="300" tween="quadratic" easing="out" condition="[system.getbool(lookandfeel.enablerssfeeds) + StringCompare(Container(9000).ListItem.Property(LibStats),None) + !ControlGroup(9003).HasFocus] | [!Skin.HasSetting(hidenextsongsinfo) + MusicPlayer.HasNext]">conditional</animation>
				<visible>!Skin.HasSetting(hidehomestats)</visible>
			</control>
			<control type="rss">
				<description>RSS feed</description>
				<left>0</left>
				<top>10</top>
				<height>30</height>
				<width>1300</width>
				<aligny>center</aligny>
				<font>font12</font>
				<urlset>1</urlset>
				<textcolor>blue</textcolor>
				<titlecolor>blue</titlecolor>
				<headlinecolor>white</headlinecolor>
				<animation effect="slide" end="0,35" time="300" tween="quadratic" easing="out" condition="[!Skin.HasSetting(hidehomestats) + !StringCompare(Container(9000).ListItem.Property(LibStats),None)] | [!IsEmpty(MusicPlayer.offset(1).Artist) + !Skin.HasSetting(hidenextsongsinfo)] | ControlGroup(9003).HasFocus">conditional</animation>
				<animation effect="slide" start="0,35" time="300" tween="quadratic" easing="out" condition="!Skin.HasSetting(hidehomestats) + StringCompare(Container(9000).ListItem.Property(LibStats),None) + IsEmpty(MusicPlayer.offset(1).Artist) + !Skin.HasSetting(hidenextsongsinfo) + !ControlGroup(9003).HasFocus">conditional</animation>
				<visible>system.getbool(lookandfeel.enablerssfeeds) + [!Player.HasAudio | Skin.HasSetting(hidenextsongsinfo)]</visible>
			</control>
			<control type="fadelabel" id="1">
				<description>Next Five Songs</description>
				<left>0</left>
				<top>10</top>
				<height>30</height>
				<width>1280</width>
				<align>center</align>
				<scroll>true</scroll>
				<scrollout>true</scrollout>
				<scrollspeed>30</scrollspeed>
				<pauseatend>400</pauseatend>
				<label>$VAR[NextFiveSongScroller]</label>
				<font>font12</font>
				<textcolor>white</textcolor>
				<shadowcolor>black</shadowcolor>
				<animation effect="fade" time="200">VisibleChange</animation>
				<visible>MusicPlayer.HasNext + !Skin.HasSetting(hidenextsongsinfo)</visible>
			</control>
		</control>
		<control type="group">
			<top>510</top>
			<animation type="WindowOpen" reversible="false">
				<effect type="zoom" start="80" end="100" center="640,360" easing="out" tween="back" time="300" />
				<effect type="fade" start="0" end="100" time="300" />
			</animation>
			<animation type="WindowClose" reversible="false">
				<effect type="zoom" start="100" end="80" center="640,360" easing="in" tween="back" time="300" />
				<effect type="fade" start="100" end="0" time="300" />
			</animation>
			<include>HomeSubMenuControl</include>
			<control type="image">
				<left>-100</left>
				<top>0</top>
				<width>1480</width>
				<height>75</height>
				<texture border="0,6,0,6">Home/HomeBack.png</texture>
			</control>
			<control type="image">
				<left>0</left>
				<top>5</top>
				<width>1280</width>
				<height>6</height>
				<texture>HomeOverlay1.png</texture>
			</control>
			<include condition="Skin.HasSetting(wraparoundhomemenu)">WrapHomeMainMenu</include>
			<include condition="!Skin.HasSetting(wraparoundhomemenu)">FixedHomeMainMenu</include>
			<control type="image">
				<left>0</left>
				<top>6</top>
				<width>128</width>
				<height>50</height>
				<texture>SideFade.png</texture>
			</control>
			<control type="image">
				<left>128r</left>
				<top>6</top>
				<width>128</width>
				<height>60</height>
				<texture flipx="true">SideFade.png</texture>
			</control>
		</control>
		<control type="image">
			<left>10</left>
			<top>-8</top>
			<width>1260</width>
			<height>545</height>
			<texture>$VAR[InfoWidgetPanel]</texture>
			<colordiffuse>FFFFFAF0</colordiffuse>
			<fadetime>FanartCrossFadeTime</fadetime>
			<include condition="!Skin.HasSetting(disablewidgetadjust)">WidgetTransparency</include>
			<animation effect="slide" start="0,0" end="0,-400" time="400" easing="out" tween="sine" condition="Skin.HasSetting(enablecleanhome) + !Control.HasFocus(510)">Conditional</animation>
			<animation effect="fade" start="0" end="100" time="500" delay="3000" condition="Window.Previous(Startup)">WindowOpen</animation>
			<visible>Control.IsVisible(602) | Control.HasFocus(510)</visible>
			<include>WidgetPanelVizability</include>
		</control>
		<control type="group" id="602">
			<left>30</left>
			<animation effect="fade" start="0" end="100" time="400" delay="1000" condition="!Window.Previous(Startup)">WindowOpen</animation>
			<animation effect="fade" start="0" end="100" time="500" delay="3000" condition="Window.Previous(Startup)">WindowOpen</animation>
			<animation effect="fade" start="0" end="100" time="400" delay="1000">Visible</animation>
			<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
			<animation effect="slide" start="0,0" end="0,-400" time="400" easing="out" tween="sine" condition="Skin.HasSetting(enablecleanhome) + !Control.HasFocus(510)">Conditional</animation>
			<include>WidgetPanelVizability</include>
			<include condition="Library.HasContent(Movies)">WidgetMovieContent</include>
			<include condition="Library.HasContent(TVShows)">WidgetTVShowContent</include>
			<include condition="Library.HasContent(MusicVideos)">WidgetConcertContent</include>
			<include condition="Library.HasContent(Music)">WidgetMusicContent</include>
			<include condition="!Skin.HasSetting(disablescriptplaylist) + Library.HasContent(Movies)">WidgetUnWatchedContent</include>
			<include condition="!Skin.HasSetting(disablescriptplaylist) + Library.HasContent(Movies)">WidgetVideoPlayListContent</include>
			<include condition="!Skin.HasSetting(disablescriptplaylist) + Library.HasContent(Music)">WidgetMusicPlayListContent</include>
			<include condition="!Skin.HasSetting(disabletvnextaired)">WidgetNextAiredContent</include>
			<include condition="!Skin.HasSetting(disablegamebrowser)">WidgetRomGamesContent</include>
			<include>WidgetFavouritesContent</include>
			<include>WidgetWeatherContent</include>
			<control type="group">
				<control type="label">
					<left>10</left>
					<top>10</top>
					<width>1200</width>
					<height>29</height>
					<font>font12_title</font>
					<label>[UPPERCASE]$VAR[InfoWidgetType][/UPPERCASE]</label>
					<scroll>true</scroll>
					<scrollout>false</scrollout>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>FFFFFAF0</textcolor>
					<visible>!Control.HasFocus(510) | !Skin.HasSetting(hideextendedwidget)</visible>
				</control>
				<control type="label">
					<left>10</left>
					<top>10</top>
					<width>1200</width>
					<height>29</height>
					<font>font12_title</font>
					<label>[UPPERCASE]$INFO[Container(510).ListItem.Label][/UPPERCASE]</label>
					<scroll>true</scroll>
					<scrollout>false</scrollout>
					<align>center</align>
					<aligny>center</aligny>
					<textcolor>selected</textcolor>
					<visible>Control.HasFocus(510) + Skin.HasSetting(hideextendedwidget)</visible>
				</control>
				<control type="image">
					<left>10</left>
					<top>42</top>
					<width>1200</width>
					<height>2</height>
					<align>center</align>
					<texture flipx="true">divider.png</texture>
				</control>
			</control>
		</control>
		<control type="image">
			<description>LOGO</description>
			<left>0</left>
			<top>55r</top>
			<width>170</width>
			<height>43</height>
			<aspectratio aligny="top" align="left">keep</aspectratio>
			<texture>xbmc-logo.png</texture>
			<include>VisibleFadeEffect</include>
			<include>Window_OpenClose_Animation</include>
			<animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(infodialog)">Conditional</animation>
			<visible>StringCompare(System.ProfileName,Master user)</visible>
		</control>
		<control type="label">
			<description>profile label</description>
			<left>5</left>
			<top>55r</top>
			<width>450</width>
			<height>30</height>
			<align>left</align>
			<aligny>center</aligny>
			<font>font28_title</font>
			<textcolor>C0FFFFFF</textcolor>
			<shadowcolor>black</shadowcolor>
			<info>System.ProfileName</info>
			<include>Window_OpenClose_Animation</include>
			<animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(infodialog)">Conditional</animation>
			<visible>!StringCompare(System.ProfileName,Master user)</visible>
		</control>
		<control type="label">
			<left>5</left>
			<top>25r</top>
			<width>350</width>
			<height>15</height>
			<align>left</align>
			<aligny>center</aligny>
			<font>font10</font>
			<textcolor>C0FFFFFF</textcolor>
			<shadowcolor>black</shadowcolor>
			<label>$LOCALIZE[31370]</label>
			<include>Window_OpenClose_Animation</include>
			<animation effect="fade" start="100" end="0" time="200" condition="Window.IsVisible(infodialog)">Conditional</animation>
			<visible>!StringCompare(System.ProfileName,Master user)</visible>
		</control>
		<control type="button" id="21">
			<description>Eject DVD Tray Button</description>
			<left>100r</left>
			<top>55r</top>
			<width>45</width>
			<height>45</height>
			<onclick>EjectTray()</onclick>
			<texturefocus border="5">FloorButtons/FloorDiskFO.png</texturefocus>
			<texturenofocus border="5">FloorButtons/FloorDiskNF.png</texturenofocus>
			<onleft condition="!Skin.HasSetting(enablehomepowerbtn)">9000</onleft>
			<onleft condition="Skin.HasSetting(enablehomepowerbtn)">20</onleft>
			<onright condition="!Skin.HasSetting(enablehomepowerbtn)">9000</onright>
			<onright condition="Skin.HasSetting(enablehomepowerbtn)">20</onright>
			<onup>9000</onup>
			<ondown condition="IntegerGreaterThan(Window(home).Property(favourite.count),0) + !Skin.HasSetting(disablescriptfavourites)">ActivateWindow(Favourites)</ondown>
			<ondown condition="!IntegerGreaterThan(Window(home).Property(favourite.count),0) | Skin.HasSetting(disablescriptfavourites)">9000</ondown>
			<animation effect="slide" start="0,0" end="45,00" time="0" condition="!Skin.HasSetting(enablehomepowerbtn)">conditional</animation>
			<visible>Skin.HasSetting(enablehomedvdbtn)</visible>
		</control>
		<control type="button" id="20">
			<description>Shutdown Button</description>
			<left>55r</left>
			<top>55r</top>
			<width>45</width>
			<height>45</height>
			<onclick>$VAR[HomePowerBtnCommand]</onclick>
			<texturefocus border="5">FloorButtons/FloorPowerFO.png</texturefocus>
			<texturenofocus border="5">FloorButtons/FloorPowerNF.png</texturenofocus>
			<onleft condition="!Skin.HasSetting(enablehomedvdbtn)">9000</onleft>
			<onleft condition="Skin.HasSetting(enablehomedvdbtn)">21</onleft>
			<onright condition="!Skin.HasSetting(enablehomedvdbtn)">9000</onright>
			<onright condition="Skin.HasSetting(enablehomedvdbtn)">21</onright>
			<onup>9000</onup>
			<ondown condition="IntegerGreaterThan(Window(home).Property(favourite.count),0) + !Skin.HasSetting(disablescriptfavourites)">ActivateWindow(Favourites)</ondown>
			<ondown condition="!IntegerGreaterThan(Window(home).Property(favourite.count),0) | Skin.HasSetting(disablescriptfavourites)">9000</ondown>
			<visible>Skin.HasSetting(enablehomepowerbtn)</visible>
		</control>
		<control type="label">
			<description>time label</description>
			<left>355r</left>
			<top>55r</top>
			<width>350</width>
			<height>30</height>
			<align>right</align>
			<aligny>center</aligny>
			<font>font28_title</font>
			<textcolor>C0FFFFFF</textcolor>
			<shadowcolor>black</shadowcolor>
			<label>$INFO[System.Time]</label>
			<include>Window_OpenClose_Animation</include>
			<animation effect="slide" start="0,0" end="-55,00" time="0" condition="Skin.HasSetting(enablehomepowerbtn)">conditional</animation>
			<animation effect="slide" start="0,0" end="-55,00" time="0" condition="Skin.HasSetting(enablehomedvdbtn)">conditional</animation>
		</control>
		<control type="label">
			<description>Date label</description>
			<left>355r</left>
			<top>25r</top>
			<width>350</width>
			<height>15</height>
			<align>right</align>
			<aligny>center</aligny>
			<font>font10</font>
			<textcolor>C0FFFFFF</textcolor>
			<shadowcolor>black</shadowcolor>
			<label>$INFO[System.Date]</label>
			<include>Window_OpenClose_Animation</include>
			<animation effect="slide" start="0,0" end="-55,00" time="0" condition="Skin.HasSetting(enablehomepowerbtn)">conditional</animation>
			<animation effect="slide" start="0,0" end="-55,00" time="0" condition="Skin.HasSetting(enablehomedvdbtn)">conditional</animation>
		</control>
	</controls>
</window>