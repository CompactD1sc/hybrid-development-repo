<?xml version="1.0" encoding="utf-8"?>
<window type="dialog" id="2128">
	<defaultcontrol always="true">450</defaultcontrol>
	<coordinates>
		<system>1</system>
		<left>0</left>
		<top>0</top>
	</coordinates>
	<onunload>ClearProperty(SwapItemLabel,Home)</onunload>
	<onunload>ClearProperty(SwapItemPath,Home)</onunload>
	<onunload>ClearProperty(SwapItemSub,Home)</onunload>
	<onunload>ClearProperty(SwapItemStats,Home)</onunload>
	<onunload>ClearProperty(SwapItemAddOn,Home)</onunload>
	<onunload>ClearProperty(SwapItemWidget,Home)</onunload>
	<onunload>ClearProperty(SwapItemType,Home)</onunload>
	<onunload>ClearProperty(SwapItemFanArt,Home)</onunload>
	<onunload>ClearProperty(SwapItemDisplay,Home)</onunload>
	<onunload>ClearProperty(SwapItemPlaylist,Home)</onunload>
	<onunload>ClearProperty(SwapItemAltMenu,Home)</onunload>
	<onunload>ClearProperty(usrselectbtn,Home)</onunload>
	<controls>
		<control type="group">
			<animation effect="slide" start="400,0" end="0,0" time="400" tween="quadratic" easing="out">WindowOpen</animation>
			<animation effect="slide" start="0,0" end="400,0" time="400" tween="quadratic" easing="out">WindowClose</animation>
			<control type="image">
				<left>400r</left>
				<top>0</top>
				<width>400</width>
				<height>720</height>
				<texture border="15,0,0,0" flipx="true">Home\MediaBladeSub.png</texture>
			</control>
			<control type="button">
				<description>Close Window button</description>
				<left>380r</left>
				<top>0</top>
				<width>64</width>
				<height>32</height>
				<onclick>PreviousMenu</onclick>
				<texturefocus>DialogCloseButton-focus.png</texturefocus>
				<texturenofocus>DialogCloseButton.png</texturenofocus>
				<onleft>450</onleft>
				<onright>450</onright>
				<onup>450</onup>
				<ondown>450</ondown>
				<visible>system.getbool(input.enablemouse)</visible>
			</control>
			<control type="label">
				<left>380r</left>
				<top>35</top>
				<width>360</width>
				<height>40</height>
				<font>font13_title</font>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>blue</textcolor>
				<shadowcolor>black</shadowcolor>
				<label>$LOCALIZE[31038]</label>
			</control>
			<control type="list" id="450">
				<left>390r</left>
				<top>130</top>
				<width>440</width>
				<height>480</height>
				<onup>450</onup>
				<onleft>Dialog.Close(2128)</onleft>
				<onright>60</onright>
				<ondown>450</ondown>
				<pagecontrol>60</pagecontrol>
				<scrolltime>200</scrolltime>
				<itemlayout height="40">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>360</width>
						<height>40</height>
						<texture border="5">button-nofocus.png</texture>
					</control>
					<control type="label">
						<left>10</left>
						<top>0</top>
						<width>340</width>
						<height>40</height>
						<font>font12_title</font>
						<align>left</align>
						<aligny>center</aligny>
						<selectedcolor>selected</selectedcolor>
						<info>ListItem.label</info>
					</control>
				</itemlayout>
				<focusedlayout height="40">
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>360</width>
						<height>40</height>
						<visible>!Control.HasFocus(450)</visible>
						<texture border="3">button-nofocus.png</texture>
					</control>
					<control type="image">
						<left>0</left>
						<top>0</top>
						<width>360</width>
						<height>40</height>
						<visible>Control.HasFocus(450)</visible>
						<texture border="3">button-focus.png</texture>
					</control>
					<control type="label">
						<left>10</left>
						<top>0</top>
						<width>340</width>
						<height>40</height>
						<font>font12_title</font>
						<align>left</align>
						<aligny>center</aligny>
						<selectedcolor>selected</selectedcolor>
						<info>ListItem.label</info>
					</control>
				</focusedlayout>
				<content>
					<item id="1">
						<description>Home Menu Item One</description>
						<label>$INFO[Skin.String(homeitem.1.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.1.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.1.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.1.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.1.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.1.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.1.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.1.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.1.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.1.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.1.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.1.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.1.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.1.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.1.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.1.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.1.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.1.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.1.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.1.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.1.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.1.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.1.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.1.label)) + !Skin.HasSetting(stickyhomemenuaction)</visible>
					</item>
					<item id="2">
						<description>Home Menu Item Two</description>
						<label>$INFO[Skin.String(homeitem.2.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.2.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.2.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.2.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.2.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.2.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.2.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.2.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.2.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.2.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.2.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.2.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.2.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.2.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.2.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.2.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.2.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.2.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.2.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.2.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.2.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.2.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.2.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.2.path))</visible>
					</item>
					<item id="3">
						<description>Home Menu Item Three</description>
						<label>$INFO[Skin.String(homeitem.3.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.3.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.3.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.3.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.3.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.3.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.3.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.3.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.3.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.3.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.3.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.3.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.3.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.3.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.3.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.3.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.3.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.3.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.3.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.3.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.3.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.3.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.3.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.3.path))</visible>
					</item>
					<item id="4">
						<description>Home Menu Item Four</description>
						<label>$INFO[Skin.String(homeitem.4.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.4.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.4.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.4.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.4.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.4.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.4.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.4.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.4.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.4.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.4.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.4.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.4.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.4.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.4.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.4.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.4.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.4.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.4.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.4.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.4.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.4.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.4.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.4.path))</visible>
					</item>
					<item id="5">
						<description>Home Menu Item Five</description>
						<label>$INFO[Skin.String(homeitem.5.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.5.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.5.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.5.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.5.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.5.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.5.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.5.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.5.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.5.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.5.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.5.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.5.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.5.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.5.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.5.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.5.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.5.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.5.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.5.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.5.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.5.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.5.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.5.path))</visible>
					</item>
					<item id="6">
						<description>Home Menu Item Six</description>
						<label>$INFO[Skin.String(homeitem.6.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.6.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.6.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.6.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.6.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.6.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.6.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.6.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.6.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.6.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.6.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.6.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.6.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.6.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.6.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.6.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.6.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.6.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.6.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.6.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.6.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.6.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.6.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.6.path))</visible>
					</item>
					<item id="7">
						<description>Home Menu Item Seven</description>
						<label>$INFO[Skin.String(homeitem.7.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.7.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.7.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.7.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.7.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.7.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.7.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.7.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.7.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.7.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.7.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.7.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.7.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.7.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.7.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.7.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.7.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.7.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.7.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.7.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.7.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.7.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.7.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.7.path))</visible>
					</item>
					<item id="8">
						<description>Home Menu Item Eight</description>
						<label>$INFO[Skin.String(homeitem.8.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.8.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.8.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.8.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.8.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.8.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.8.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.8.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.8.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.8.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.8.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.8.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.8.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.8.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.8.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.8.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.8.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.8.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.8.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.8.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.8.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.8.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.8.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.8.path))</visible>
					</item>
					<item id="9">
						<description>Home Menu Item Nine</description>
						<label>$INFO[Skin.String(homeitem.9.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.9.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.9.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.9.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.9.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.9.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.9.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.9.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.9.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.9.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.9.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.9.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.9.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.9.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.9.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.9.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.9.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.9.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.9.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.9.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.9.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.9.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.9.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.9.path))</visible>
					</item>
					<item id="10">
						<description>Home Menu Item Ten</description>
						<label>$INFO[Skin.String(homeitem.10.label)]</label>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].label,$INFO[Skin.String(homeitem.10.label)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].path,$INFO[Skin.String(homeitem.10.path)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].sub,$INFO[Skin.String(homeitem.10.sub)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].stats,$INFO[Skin.String(homeitem.10.stats)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].addon,$INFO[Skin.String(homeitem.10.addon)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].widget,$INFO[Skin.String(homeitem.10.widget)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].type,$INFO[Skin.String(homeitem.10.type)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].fanart,$INFO[Skin.String(homeitem.10.fanart)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].display,$INFO[Skin.String(homeitem.10.display)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].playlist,$INFO[Skin.String(homeitem.10.playlist)])</onclick>
						<onclick>Skin.SetString($INFO[Window(Home).Property(usrselectbtn)].menu,$INFO[Skin.String(homeitem.10.menu)])</onclick>
						<onclick>Skin.SetString(homeitem.10.label,$INFO[Window(Home).Property(SwapItemLabel)])</onclick>
						<onclick>Skin.SetString(homeitem.10.path,$INFO[Window(Home).Property(SwapItemPath)])</onclick>
						<onclick>Skin.SetString(homeitem.10.sub,$INFO[Window(Home).Property(SwapItemSub)])</onclick>
						<onclick>Skin.SetString(homeitem.10.stats,$INFO[Window(Home).Property(SwapItemStats)])</onclick>
						<onclick>Skin.SetString(homeitem.10.addon,$INFO[Window(Home).Property(SwapItemAddOn)])</onclick>
						<onclick>Skin.SetString(homeitem.10.widget,$INFO[Window(Home).Property(SwapItemWidget)])</onclick>
						<onclick>Skin.SetString(homeitem.10.type,$INFO[Window(Home).Property(SwapItemType)])</onclick>
						<onclick>Skin.SetString(homeitem.10.fanart,$INFO[Window(Home).Property(SwapItemFanArt)])</onclick>
						<onclick>Skin.SetString(homeitem.10.display,$INFO[Window(Home).Property(SwapItemDisplay)])</onclick>
						<onclick>Skin.SetString(homeitem.10.playlist,$INFO[Window(Home).Property(SwapItemPlaylist)])</onclick>
						<onclick>Skin.SetString(homeitem.10.menu,$INFO[Window(Home).Property(SwapItemAltMenu)])</onclick>
						<onclick>Dialog.Close(2128)</onclick>
						<onclick>Skin.Reset(usrselectaddon)</onclick>
						<visible>!IsEmpty(Skin.String(homeitem.10.path))</visible>
					</item>
				</content>
			</control>
			<control type="button">
				<description>Up Arrow</description>
				<left>390r</left>
				<top>95</top>
				<width>30</width>
				<height>40</height>
				<texturefocus>arrow-big-up.png</texturefocus>
				<texturenofocus>arrow-big-up.png</texturenofocus>
				<onclick>Control.Move(450,-1)</onclick>
				<visible>Container(450).HasPrevious</visible>
				<include>VisibleFadeEffect</include>
			</control>
			<control type="button">
				<description>Up Arrow</description>
				<left>60r</left>
				<top>95</top>
				<width>30</width>
				<height>40</height>
				<texturefocus>arrow-big-up.png</texturefocus>
				<texturenofocus>arrow-big-up.png</texturenofocus>
				<onclick>Control.Move(450,-1)</onclick>
				<visible>Container(450).HasPrevious</visible>
				<include>VisibleFadeEffect</include>
			</control>
			<control type="button">
				<description>Down Arrow</description>
				<left>390r</left>
				<top>605</top>
				<width>30</width>
				<height>40</height>
				<texturefocus>arrow-big-down.png</texturefocus>
				<texturenofocus>arrow-big-down.png</texturenofocus>
				<onclick>Control.Move(450,1)</onclick>
				<visible>Container(450).HasNext</visible>
				<include>VisibleFadeEffect</include>
			</control>
			<control type="button">
				<description>Down Arrow</description>
				<left>60r</left>
				<top>605</top>
				<width>30</width>
				<height>40</height>
				<texturefocus>arrow-big-down.png</texturefocus>
				<texturenofocus>arrow-big-down.png</texturenofocus>
				<onclick>Control.Move(450,1)</onclick>
				<visible>Container(450).HasNext</visible>
				<include>VisibleFadeEffect</include>
			</control>
			<control type="scrollbar" id="60">
				<left>1250</left>
				<top>95</top>
				<width>25</width>
				<height>550</height>
				<texturesliderbackground border="0,14,0,14">ScrollBarV.png</texturesliderbackground>
				<texturesliderbar border="0,14,0,14">ScrollBarV_bar.png</texturesliderbar>
				<texturesliderbarfocus border="0,14,0,14">ScrollBarV_bar_focus.png</texturesliderbarfocus>
				<textureslidernib>ScrollBarNib.png</textureslidernib>
				<textureslidernibfocus>ScrollBarNib.png</textureslidernibfocus>
				<onleft>450</onleft>
				<onright>450</onright>
				<showonepage>true</showonepage>
				<orientation>vertical</orientation>
				<visible>Control.IsVisible(450)</visible>
			</control>
		</control>
	</controls>
</window>