<?xml version="1.0" encoding="utf-8"?>
<includes>
	<include name="HomeSubMenuControl">
		<control type="group" id="9001">
			<left>178</left>
			<top>230</top>
			<animation effect="slide" start="0,0" end="-178,-160" delay="0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen)">conditional</animation>
			<onright condition="!Skin.HasSetting(HorizontalHomeScreen)">ClearProperty(SideBladeOpen,Home)</onright>
			<onright condition="!Skin.HasSetting(HorizontalHomeScreen)">9003</onright>
			<onleft condition="!Skin.HasSetting(HorizontalHomeScreen)">ClearProperty(SideBladeOpen,Home)</onleft>
			<onleft condition="!Skin.HasSetting(HorizontalHomeScreen)">9000</onleft>
			<onup condition="Skin.HasSetting(HorizontalHomeScreen)">9000</onup>
			<ondown condition="Skin.HasSetting(HorizontalHomeScreen)">10</ondown>
			<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VertSubAnimation</include>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),FullScreen)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9025).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9025).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9025).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9025).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9025).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9025).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9025).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9025).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9025).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9025).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen)</visible>
				</control>
				<control type="list" id="9025">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9025</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9025</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9025</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9025</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetMediaContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetOne) + IntegerGreaterThan(Container(9010).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9010).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9010).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9010).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9010).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9010).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9010).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9010).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9010).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9010).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9010).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9010).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9010).NumItems,0)</visible>
				</control>
				<control type="list" id="9010">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9010</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9010</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9010</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9010</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetOneContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetTwo) + IntegerGreaterThan(Container(9016).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9016).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9016).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9016).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9016).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9016).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9016).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9016).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9016).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9016).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9016).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9016).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9016).NumItems,0)</visible>
				</control>
				<control type="list" id="9016">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9016</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9016</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9016</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9016</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetTwoContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetThree) + IntegerGreaterThan(Container(9017).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9017).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9017).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9017).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9017).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9017).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9017).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9017).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9017).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9017).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9017).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9017).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9017).NumItems,0)</visible>
				</control>
				<control type="list" id="9017">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9017</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9017</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9017</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9017</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetThreeContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetFour) + IntegerGreaterThan(Container(9011).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9011).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9011).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9011).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9011).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9011).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9011).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9011).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9011).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9011).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9011).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9011).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9011).NumItems,0)</visible>
				</control>
				<control type="list" id="9011">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9011</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9011</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9011</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9011</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetFourContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetFive) + IntegerGreaterThan(Container(9019).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9019).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9019).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9019).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9019).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9019).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9019).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9019).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9019).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9019).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9019).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9019).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9019).NumItems,0)</visible>
				</control>
				<control type="list" id="9019">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9019</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9019</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9019</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9019</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetFiveContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetSix) + IntegerGreaterThan(Container(9014).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9014).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9014).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9014).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9014).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9014).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9014).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9014).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9014).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9014).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9014).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9014).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9014).NumItems,0)</visible>
				</control>
				<control type="list" id="9014">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9014</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9014</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9014</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9014</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetSixContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetSeven) + IntegerGreaterThan(Container(9012).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9012).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9012).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9012).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9012).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9012).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9012).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9012).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9012).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9012).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9012).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9012).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9012).NumItems,0)</visible>
				</control>
				<control type="list" id="9012">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9012</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9012</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9012</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9012</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetSevenContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetEight) + IntegerGreaterThan(Container(9015).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9015).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9015).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9015).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9015).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9015).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9015).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9015).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9015).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9015).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9015).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9015).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9015).NumItems,0)</visible>
				</control>
				<control type="list" id="9015">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9015</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9015</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9015</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9015</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetEightContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetNine) + IntegerGreaterThan(Container(9023).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9023).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9023).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9023).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9023).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9023).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9023).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9023).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9023).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9023).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9023).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9023).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9023).NumItems,0)</visible>
				</control>
				<control type="list" id="9023">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9023</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9023</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9023</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9023</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetNineContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetTen) + IntegerGreaterThan(Container(9021).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9021).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9021).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9021).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9021).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9021).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9021).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9021).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9021).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9021).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9021).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9021).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9021).NumItems,0)</visible>
				</control>
				<control type="list" id="9021">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9021</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9021</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9021</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9021</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetTenContent</include>
					</content>
				</control>
			</control>
			<control type="group">
				<visible>StringCompare(Container(9000).ListItem.Property(SubMenu),SubSetEleven) + IntegerGreaterThan(Container(9022).NumItems,0)</visible>
				<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorzSubAnimation</include>
				<animation effect="slide" start="0,0" end="96.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9022).NumItems,5)">conditional</animation>
				<animation effect="slide" start="0,0" end="193,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9022).NumItems,4)">conditional</animation>
				<animation effect="slide" start="0,0" end="289.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9022).NumItems,3)">conditional</animation>
				<animation effect="slide" start="0,0" end="386,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9022).NumItems,2)">conditional</animation>
				<animation effect="slide" start="0,0" end="482.5,0" time="0" condition="Skin.HasSetting(HorizontalHomeScreen) + StringCompare(Container(9022).NumItems,1)">conditional</animation>
				<control type="image">
					<left>26</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3" flipx="true">HomeSubEnd.png</texture>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9022).NumItems,0)</visible>
				</control>
				<control type="image">
					<left>1219</left>
					<top>0</top>
					<width>35</width>
					<height>35</height>
					<texture border="0,0,0,3">HomeSubEnd.png</texture>
					<animation effect="slide" start="0,0" end="-193,0" time="0" condition="StringCompare(Container(9022).NumItems,5)">conditional</animation>
					<animation effect="slide" start="0,0" end="-386,0" time="0" condition="StringCompare(Container(9022).NumItems,4)">conditional</animation>
					<animation effect="slide" start="0,0" end="-579,0" time="0" condition="StringCompare(Container(9022).NumItems,3)">conditional</animation>
					<animation effect="slide" start="0,0" end="-772,0" time="0" condition="StringCompare(Container(9022).NumItems,2)">conditional</animation>
					<animation effect="slide" start="0,0" end="-965,0" time="0" condition="StringCompare(Container(9022).NumItems,1)">conditional</animation>
					<visible>Skin.HasSetting(HorizontalHomeScreen) + IntegerGreaterThan(Container(9022).NumItems,0)</visible>
				</control>
				<control type="list" id="9022">
					<include condition="Skin.HasSetting(HorizontalHomeScreen)">HorizontalSubMenuValues</include>
					<include condition="!Skin.HasSetting(HorizontalHomeScreen)">VerticalSubMenuValues</include>
					<onleft condition="Skin.HasSetting(HorizontalHomeScreen)">9022</onleft>
					<onright condition="Skin.HasSetting(HorizontalHomeScreen)">9022</onright>
					<onup condition="!Skin.HasSetting(HorizontalHomeScreen)">9022</onup>
					<ondown condition="!Skin.HasSetting(HorizontalHomeScreen)">9022</ondown>
					<include>SubMenuLayout</include>
					<content>
						<include>SubSetElevenContent</include>
					</content>
				</control>
			</control>
		</control>
	</include>
	<include name="VerticalSubMenuValues">
		<onleft>ClearProperty(SideBladeOpen,Home)</onleft>
		<onleft>9000</onleft>
		<onright>ClearProperty(SideBladeOpen,Home)</onright>
		<onright>9003</onright>
		<left>0</left>
		<top>0</top>
		<width>193</width>
		<height>720</height>
		<viewtype label="535">list</viewtype>
		<pagecontrol>-</pagecontrol>
		<scrolltime>200</scrolltime>
		<orientation>Vertical</orientation>
		<visible>!Skin.HasSetting(HorizontalHomeScreen)</visible>
	</include>
	<include name="HorizontalSubMenuValues">
		<onup>9000</onup>
		<ondown>10</ondown>
		<left>61</left>
		<top>0</top>
		<width>1158</width>
		<height>35</height>
		<viewtype label="535">list</viewtype>
		<pagecontrol>-</pagecontrol>
		<scrolltime>200</scrolltime>
		<orientation>Horizontal</orientation>
		<hitrect x="0" y="0" w="1280" h="44" />
		<visible>Skin.HasSetting(HorizontalHomeScreen)</visible>
	</include>
	<include name="SubMenuLayout">
		<itemlayout height="35" width="193">
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>193</width>
				<height>35</height>
				<texture border="5">button-nofocus.png</texture>
				<visible>!Skin.HasSetting(HorizontalHomeScreen)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>193</width>
				<height>35</height>
				<texture border="5">HomeSubNF.png</texture>
				<visible>Skin.HasSetting(HorizontalHomeScreen)</visible>
			</control>
			<control type="label">
				<left>5</left>
				<top>0</top>
				<height>35</height>
				<width>183</width>
				<font>font12</font>
				<textcolor>grey2</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.label]</label>
			</control>
		</itemlayout>
		<focusedlayout height="35" width="193">
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>193</width>
				<height>35</height>
				<texture border="5">button-nofocus.png</texture>
				<visible>!Skin.HasSetting(HorizontalHomeScreen)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>193</width>
				<height>35</height>
				<texture border="5">HomeSubNF.png</texture>
				<visible>Skin.HasSetting(HorizontalHomeScreen)</visible>
			</control>
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>193</width>
				<height>35</height>
				<texture border="5">button-focus.png</texture>
				<visible>ControlGroup(9001).HasFocus</visible>
			</control>
			<control type="label">
				<left>5</left>
				<top>0</top>
				<height>35</height>
				<width>183</width>
				<font>font12</font>
				<textcolor>grey2</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.label]</label>
			</control>
			<control type="label">
				<left>5</left>
				<top>0</top>
				<height>35</height>
				<width>183</width>
				<font>font12</font>
				<textcolor>white</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[ListItem.label]</label>
				<visible>ControlGroup(9001).HasFocus</visible>
			</control>
		</focusedlayout>
	</include>
	<include name="HorzSubAnimation">
		<animation effect="slide" start="0,-40" end="0,0" delay="200" time="200" tween="quadratic" easing="out">Visible</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="!ControlGroup(9001).HasFocus + Skin.HasSetting(HideHorzSubMenu)">conditional</animation>
		<animation effect="fade" start="0" end="100" delay="300" time="200" condition="ControlGroup(9001).HasFocus + Skin.HasSetting(HideHorzSubMenu)">conditional</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="ControlGroup(9001).HasFocus + Skin.HasSetting(HideHorzSubMenu)">WindowClose</animation>
	</include>
	<include name="VertSubAnimation">
		<animation effect="fade" start="100" end="0" time="0" condition="IsEmpty(Window(Home).Property(SideBladeOpen))">conditional</animation>
		<animation effect="fade" start="0" end="100" delay="300" time="200" condition="!IsEmpty(Window(Home).Property(SideBladeOpen))">conditional</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="!IsEmpty(Window(Home).Property(SideBladeOpen))">WindowClose</animation>
		<animation effect="slide" end="210,0" time="300" tween="quadratic" easing="out" condition="!IsEmpty(Window(Home).Property(SideBladeOpen))">conditional</animation>
	</include>
	<include name="SubSetMediaContent">
		<item>
			<label>210</label>
			<onclick>PlayerControl(Previous)</onclick>
		</item>
		<item>
			<label>31354</label>
			<onclick>PlayerControl(Next)</onclick>
			<visible>VideoPlayer.Content(LiveTV)</visible>
		</item>
		<item>
			<label>31354</label>
			<onclick>PlayerControl(Rewind)</onclick>
			<visible>!VideoPlayer.Content(LiveTV)</visible>
		</item>
		<item>
			<label>$VAR[SubMenuPlayBtn]</label>
			<onclick>PlayerControl(Play)</onclick>
			<visible>!VideoPlayer.Content(LiveTV)</visible>
		</item>
		<item>
			<label>$VAR[SubMenuPlayBtn]</label>
			<onclick>PlayerControl(Play)</onclick>
			<enable>Player.PauseEnabled</enable>
			<visible>VideoPlayer.Content(LiveTV)</visible>
		</item>
		<item>
			<label>31352</label>
			<onclick>left</onclick>
			<onclick>PlayerControl(Stop)</onclick>
			<onclick>SetFocus(9000)</onclick>
		</item>
		<item>
			<label>31353</label>
			<onclick>PlayerControl(Forward)</onclick>
			<visible>!VideoPlayer.Content(LiveTV)</visible>
		</item>
		<item>
			<label>209</label>
			<onclick>PlayerControl(Next)</onclick>
			<visible>!VideoPlayer.Content(LiveTV)</visible>
		</item>
		<item>
			<label>264</label>
			<onclick>PlayerControl(record)</onclick>
			<visible>VideoPlayer.Content(LiveTV)</visible>
		</item>
	</include>
	<include name="SubSetOneContent">
		<item>
			<label>$VAR[SubSetOneItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetOne.1.Path))">$VAR[MoviesTitleCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetOne.1.Path))">$INFO[Skin.String(SubSetOne.1.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.1.Path)) | Library.HasContent(Movies) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetOneItemTwo]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetOne.2.Path))">$VAR[TVShowTitleCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetOne.2.Path))">$INFO[Skin.String(SubSetOne.2.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.2.Path)) | Library.HasContent(TVShows) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetOneItemThree]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetOne.3.Path))">$VAR[ConcertsTitleCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetOne.3.Path))">$INFO[Skin.String(SubSetOne.3.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.3.Path)) | Library.HasContent(MusicVideos) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetOneItemFour]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetOne.4.Path))">ActivateWindow(Videos,Files,return)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetOne.4.Path))">$INFO[Skin.String(SubSetOne.4.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.4.Path)) | !Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetOneItemFive]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetOne.5.Path))">$VAR[VideoFilesCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetOne.5.Path))">$INFO[Skin.String(SubSetOne.5.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.5.Path)) | Library.HasContent(Video) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetOneItemSix]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetOne.6.Path))">ActivateWindow(Videos,Addons,return)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetOne.6.Path))">$INFO[Skin.String(SubSetOne.6.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetOne.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetOne.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetOne.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetOne.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetOne.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetOne.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetOne.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetOne.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetOne.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetOne.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetOne.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetTwoContent">
		<item>
			<label>$VAR[SubSetTwoItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetTwo.1.Path))">$VAR[MoviesRecentCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetTwo.1.Path))">$INFO[Skin.String(SubSetTwo.1.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.1.Path)) | Library.HasContent(Movies) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetTwoItemTwo]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetTwo.2.Path))">$VAR[MoviesSetsCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetTwo.2.Path))">$INFO[Skin.String(SubSetTwo.2.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.2.Path)) | Library.HasContent(Movies) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetTwoItemThree]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetTwo.3.Path))">$VAR[MoviesTitleCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetTwo.3.Path))">$INFO[Skin.String(SubSetTwo.3.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.3.Path)) | Library.HasContent(Movies) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetTwoItemFour]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetTwo.4.Path))">$VAR[MoviesGenreCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetTwo.4.Path))">$INFO[Skin.String(SubSetTwo.4.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.4.Path)) | Library.HasContent(Movies) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetTwoItemFive]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetTwo.5.Path))">$VAR[MoviesTagsCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetTwo.5.Path))">$INFO[Skin.String(SubSetTwo.5.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.5.Path)) | Library.HasContent(Movies) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetTwoItemSix]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetTwo.6.Path))">$VAR[MoviesPlayListCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetTwo.6.Path))">$INFO[Skin.String(SubSetTwo.6.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetTwo.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTwo.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTwo.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTwo.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTwo.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTwo.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTwo.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTwo.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTwo.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTwo.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTwo.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetThreeContent">
		<item>
			<label>$VAR[SubSetThreeItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetThree.1.Path))">ActivateWindow(2124),return</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetThree.1.Path))">$INFO[Skin.String(SubSetThree.1.Path)]</onclick>
			<visible>!Skin.HasSetting(UPnP_Mode) | !IsEmpty(Skin.String(SubSetThree.1.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetThreeItemTwo]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetThree.2.Path))">$VAR[TVShowRecentCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetThree.2.Path))">$INFO[Skin.String(SubSetThree.2.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.2.Path)) | Library.HasContent(TVShows) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetThreeItemThree]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetThree.3.Path))">$VAR[TVShowTitleCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetThree.3.Path))">$INFO[Skin.String(SubSetThree.3.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.3.Path)) | Library.HasContent(TVShows) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetThreeItemFour]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetThree.4.Path))">$VAR[TVShowGenreCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetThree.4.Path))">$INFO[Skin.String(SubSetThree.4.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.4.Path)) | Library.HasContent(TVShows) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetThreeItemFive]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetThree.5.Path))">$VAR[TVShowTagsCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetThree.5.Path))">$INFO[Skin.String(SubSetThree.5.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.5.Path)) | Library.HasContent(TVShows) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetThreeItemSix]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetThree.6.Path))">$VAR[TVShowYearsCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetThree.6.Path))">$INFO[Skin.String(SubSetThree.6.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.6.Path)) | Library.HasContent(TVShows) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetThree.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetThree.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetThree.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetThree.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetThree.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetThree.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetThree.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetThree.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetThree.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetThree.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetFourContent">
		<item>
			<label>$VAR[SubSetFourItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFour.1.Path))">$VAR[MusicArtistsCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFour.1.Path))">$INFO[Skin.String(SubSetFour.1.Path)]</onclick>
			<visible>Library.HasContent(Music) | Skin.HasSetting(UPnP_Mode) | !IsEmpty(Skin.String(SubSetFour.1.Path))</visible>
			<visible>!Skin.String(SubSetFour.1.Path,Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFourItemTwo]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFour.2.Path))">$VAR[MusicAlbumsCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFour.2.Path))">$INFO[Skin.String(SubSetFour.2.Path)]</onclick>
			<visible>Library.HasContent(Music) | Skin.HasSetting(UPnP_Mode) | !IsEmpty(Skin.String(SubSetFour.2.Path))</visible>
			<visible>!Skin.String(SubSetFour.2.Path,Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFourItemThree]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFour.3.Path))">PlayerControl(PartyMode(music))</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFour.3.Path))">$INFO[Skin.String(SubSetFour.3.Path)]</onclick>
			<visible>Library.HasContent(Music) | !IsEmpty(Skin.String(SubSetFour.3.Path))</visible>
			<visible>!Skin.String(SubSetFour.3.Path,Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFourItemFour]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFour.4.Path))">ActivateWindow(MusicFiles)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFour.4.Path))">$INFO[Skin.String(SubSetFour.4.Path)]</onclick>
			<visible>!Skin.HasSetting(UPnP_Mode) | !IsEmpty(Skin.String(SubSetFour.4.Path))</visible>
			<visible>!Skin.String(SubSetFour.4.Path,Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFourItemFive]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFour.5.Path))">$VAR[MusicLibraryCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFour.5.Path))">$INFO[Skin.String(SubSetFour.5.Path)]</onclick>
			<visible>Library.HasContent(Music) | Skin.HasSetting(UPnP_Mode) | !IsEmpty(Skin.String(SubSetFour.5.Path))</visible>
			<visible>!Skin.String(SubSetFour.5.Path,Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFourItemSix]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFour.6.Path))">ActivateWindow(MusicLibrary,Addons,return)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFour.6.Path))">$INFO[Skin.String(SubSetFour.6.Path)]</onclick>
			<visible>Library.HasContent(Music) | !IsEmpty(Skin.String(SubSetFour.6.Path))</visible>
			<visible>!Skin.String(SubSetFour.6.Path,Hidden)</visible>
		</item>
		<item>
		
			<label>$LOCALIZE[31219]</label>
			
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>ActivateWindow(MusicFiles,Addons,return)</onclick>
			<visible>!Library.HasContent(Music) + IsEmpty(Skin.String(SubSetFour.6.Path))</visible>
			<visible>!Skin.String(SubSetFour.6.Path,Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFour.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFour.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFour.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFour.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFour.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFour.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFour.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFour.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFour.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFour.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFour.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFour.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFour.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFour.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFour.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFour.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetFiveContent">
		<item>
			<label>$VAR[SubSetFiveItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFive.1.Path))">ActivateWindow(2126),return</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFive.1.Path))">$INFO[Skin.String(SubSetFive.1.Path)]</onclick>
			<visible>!Skin.HasSetting(UPnP_Mode) | !IsEmpty(Skin.String(SubSetFive.1.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFiveItemTwo]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFive.2.Path))">$VAR[ConcertsTitleCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFive.2.Path))">$INFO[Skin.String(SubSetFive.2.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.2.Path)) | Library.HasContent(MusicVideos) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFiveItemThree]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFive.3.Path))">$VAR[ConcertsGenreCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFive.3.Path))">$INFO[Skin.String(SubSetFive.3.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.3.Path)) | Library.HasContent(MusicVideos) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFiveItemFour]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFive.4.Path))">$VAR[ConcertsYearsCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFive.4.Path))">$INFO[Skin.String(SubSetFive.4.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.4.Path)) | Library.HasContent(MusicVideos) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetFiveItemFive]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetFive.5.Path))">$VAR[ConcertsTagsCmd]</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetFive.5.Path))">$INFO[Skin.String(SubSetFive.5.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.5.Path)) | Library.HasContent(MusicVideos) | Skin.HasSetting(UPnP_Mode)</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFive.6.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFive.6.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.6.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFive.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFive.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFive.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFive.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFive.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFive.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetFive.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetFive.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetFive.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetFive.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetSixContent">
		<item>
			<label>$VAR[SubSetSixItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSix.1.Path))">ActivateWindow(TVChannels)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSix.1.Path))">$INFO[Skin.String(SubSetSix.1.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSix.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSixItemTwo]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSix.2.Path))">ActivateWindow(TVGuide)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSix.2.Path))">$INFO[Skin.String(SubSetSix.2.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSix.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSixItemThree]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSix.3.Path))">ActivateWindow(TVRecordings)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSix.3.Path))">$INFO[Skin.String(SubSetSix.3.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSix.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSixItemFour]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSix.4.Path))">ActivateWindow(TVTimers)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSix.4.Path))">$INFO[Skin.String(SubSetSix.4.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSix.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSixItemFive]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSix.5.Path))">ActivateWindow(TVSearch)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSix.5.Path))">$INFO[Skin.String(SubSetSix.5.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSix.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSixItemSix]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSix.6.Path))">ActivateWindow(RadioChannels)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSix.6.Path))">$INFO[Skin.String(SubSetSix.6.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSix.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetSix.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetSix.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetSix.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetSix.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetSix.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetSix.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetSix.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetSix.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetSix.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetSix.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetSix.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetSix.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetSix.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetSix.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetSix.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetSix.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetSevenContent">
		<item>
			<label>$VAR[SubSetSevenItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.1.path)) + System.HasAddon(os.openelec.settings)">RunAddon(os.openelec.settings)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.1.path)) + System.HasAddon(service.openelec.settings)">RunAddon(service.openelec.settings)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.1.path)) + System.HasAddon(script.raspbmc.settings)">RunAddon(script.raspbmc.settings)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.1.path)) + !System.HasAddon(os.openelec.settings) + !System.HasAddon(service.openelec.settings) + !System.HasAddon(script.raspbmc.settings)">ActivateWindow(SkinSettings)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSeven.1.Path))">$INFO[Skin.String(SubSetSeven.1.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSeven.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSevenItemTwo]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.2.Path))">ActivateWindow(FileManager)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSeven.2.Path))">$INFO[Skin.String(SubSetSeven.2.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSeven.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSevenItemThree]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.3.Path))">ActivateWindow(AddonBrowser),return</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSeven.3.Path))">$INFO[Skin.String(SubSetSeven.3.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSeven.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSevenItemFour]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.4.Path))">ActivateWindow(Profiles)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSeven.4.Path))">$INFO[Skin.String(SubSetSeven.4.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSeven.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSevenItemFive]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.5.Path))">ActivateWindow(SystemInfo)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSeven.5.Path))">$INFO[Skin.String(SubSetSeven.5.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSeven.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetSevenItemSix]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetSeven.6.Path))">ActivateWindow(ShutdownMenu)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetSeven.6.Path))">$INFO[Skin.String(SubSetSeven.6.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetSeven.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetSeven.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetSeven.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetSeven.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetSeven.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetSeven.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetSeven.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetSeven.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetSeven.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetSeven.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetSeven.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetSeven.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetSeven.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetSeven.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetSeven.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetSeven.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetSeven.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetEightContent">
		<item>
			<label>$VAR[SubSetEightItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetEight.1.Path))">ActivateWindow(Pictures,Addons,return)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetEight.1.Path))">$INFO[Skin.String(SubSetEight.1.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetEight.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.2.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.2.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.2.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.3.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.3.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.3.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.4.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.4.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.4.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.5.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.5.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.5.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.6.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.6.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.6.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEight.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEight.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEight.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEight.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetNineContent">
		<item>
			<label>$VAR[SubSetNineItemOne]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetNine.1.Path))">ActivateWindow(Videos,Addons,return)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetNine.1.Path))">$INFO[Skin.String(SubSetNine.1.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetNine.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$VAR[SubSetNineItemTwo]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetNine.2.Path)) + Library.HasContent(Music)">ActivateWindow(MusicLibrary,Addons,return)</onclick>
			<onclick condition="IsEmpty(Skin.String(SubSetNine.2.Path)) + !Library.HasContent(Music)">ActivateWindow(MusicFiles,Addons,return)</onclick>
			<onclick condition="!IsEmpty(Skin.String(SubSetNine.2.Path))">$INFO[Skin.String(SubSetNine.2.Path)]</onclick>
			<visible>!stringcompare(Skin.String(SubSetNine.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetNine.3.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetNine.3.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetNine.3.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetNine.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetNine.4.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetNine.4.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetNine.4.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetNine.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetNine.5.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetNine.5.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetNine.5.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetNine.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetNine.6.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetNine.6.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetNine.6.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetNine.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetNine.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetNine.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetNine.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetNine.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetNine.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetNine.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetNine.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetNine.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetNine.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetNine.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetNine.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetNine.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetNine.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetNine.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetNine.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetNine.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetTenContent">
		<item>
			<label>$INFO[Skin.String(SubSetTen.1.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.1.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.1.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.2.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.2.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.2.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.3.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.3.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.3.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.4.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.4.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.4.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.5.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.5.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.5.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.6.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.6.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.6.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetTen.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetTen.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetTen.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetTen.10.Path),Hidden)</visible>
		</item>
	</include>
	<include name="SubSetElevenContent">
		<item>
			<label>$INFO[Skin.String(SubSetEleven.1.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.1.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.1.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.1.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.2.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.2.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.2.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.2.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.3.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.3.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.3.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.3.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.4.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.4.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.4.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.4.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.5.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.5.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.5.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.5.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.6.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.6.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.6.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.6.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.7.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.7.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.7.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.7.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.8.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.8.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.8.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.8.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.9.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.9.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.9.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.9.Path),Hidden)</visible>
		</item>
		<item>
			<label>$INFO[Skin.String(SubSetEleven.10.Label)]</label>
			<onclick>SetProperty(SubMenuBackground,$VAR[SubMenuItemBackground],Home)</onclick>
			<onclick>$INFO[Skin.String(SubSetEleven.10.Path)]</onclick>
			<visible>!IsEmpty(Skin.String(SubSetEleven.10.Path))</visible>
			<visible>!stringcompare(Skin.String(SubSetEleven.10.Path),Hidden)</visible>
		</item>
	</include>
</includes>